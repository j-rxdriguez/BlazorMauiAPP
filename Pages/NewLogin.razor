@page "/login"
@using LoginFlowInMauiBlazorApp.Models.DTO
@using LoginFlowInMauiBlazorApp.Services
@inject IAppService AppService
@inject NavigationManager NavigationManager


	@if(!string.IsNullOrEmpty(@SuccessMessage))
	{
		<p class"text-success">@SuccessMessage</p>
	}

		<EditForm Model="@loginModel" OnValidSubmit="Submit">
			<DataAnnotationsValidator />
			<div class="form-group">
				<label>Email address</label>
				<input type="email" @bind-value="loginModel.Email" class="form-control" placeholder="Enter email">
				<ValidationMessage For="@(()=> loginModel.Email)" />
			</div>
			<div class="mt-2 form-group">
				<label>Password</label>
				<input type="password" @bind-value="loginModel.Password" class="form-control" placeholder="Password">
				<ValidationMessage For="@(()=> loginModel.Password)" />
			</div>

			<div class="mt-2 text-end">
				<NavLink class="nav-link" href="registration">
					<span>Click here to create new account?</span>
				</NavLink>
			</div>

			<div class="text-center mt-2">
				<button class="btn btn-primary" type="submit">
					<span class="" role="status" aria-hidden="true"></span>
					SignIn
				</button>
			</div>
		</EditForm>


@code {
	private loginDTO loginModel = new();
	private string SuccessMessage = string.Empty;
	private string ErrorMessage = string.Empty;


	private async Task Submit()
	{
		
		var request = await AppService.Login(loginModel);
		if (request is not null)
		{
			SuccessMessage = "Login successfuly";
			loginModel = new();
			
			NavigationManager.NavigateTo("/login");
		}
		else
		{
			ErrorMessage = "Login failed";
			loginModel = new();
			
			NavigationManager.NavigateTo("/login");
		}
	}
}
